<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cuit.mete</groupId>
    <artifactId>JtDataDealJob</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>JtDataDealJob</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.gdal</groupId>
            <artifactId>gdal</artifactId>
            <version>2.3.2</version>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.8.3</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.1.16</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.78</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.21</version>
            <scope>runtime</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.22</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.22</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.3</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>2.2.3</version>
        </dependency>
        <dependency>
            <groupId>com.cuit.mete</groupId>
            <artifactId>MeteGis</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-beanutils</artifactId>
                    <groupId>commons-beanutils</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-collections</artifactId>
                    <groupId>commons-collections</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-codec</artifactId>
                    <groupId>commons-codec</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-compress</artifactId>
                    <groupId>org.apache.commons</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.cuit.mete</groupId>
            <artifactId>CimissDataInterface</artifactId>
            <version>2.0-RELEASE</version>
        </dependency>
        <dependency>
            <groupId>com.cuit.mete</groupId>
            <artifactId>MicapsDeal</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>com.cuit.mete</groupId>
            <artifactId>geoserver</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-codec</artifactId>
                    <groupId>commons-codec</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.cuit.job</groupId>
            <artifactId>JobManager</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <artifactId>xmlbeans</artifactId>
                    <groupId>org.apache.xmlbeans</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <!--从远程仓库下载-->
    <repositories>
        <repository>
            <id>local-repository</id>
            <url>http://frp2.moej.cn/repository/cuitgis_group/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                    <!-- 对要打的jar包进行配置 -->
                    <configuration>
                        <!-- Configuration of the archiver -->
                        <archive>
                            <!--生成的jar中，不要包含pom.xml和pom.properties这两个文件-->
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <!-- Manifest specific configuration -->
                            <manifest>
                                <!--是否要把第三方jar放到manifest的classpath中-->
                                <addClasspath>true</addClasspath>
                                <!--
                                生成的manifest中classpath的前缀，
                                因为要把第三方jar放到lib目录下，
                                所以classpath的前缀是lib/
                                -->
                                <classpathPrefix>lib/</classpathPrefix>
                                <!--业务：跑实时数据的-->

                                <mainClass>com.cuit.mete.parse.DealMain</mainClass>

                                <!--业务：跑历史数据的-->
                                <!--
                                <mainClass>com.cuit.mete.smfire.SMFireWarnProcess</mainClass>
                                -->
                            </manifest>
                            <!--
                            <manifestEntries>
                                <Class-Path>lib/jai-codec-1.1.3.jar lib/jai_core-1.1.3.jar</Class-Path>
                            </manifestEntries>
                            -->
                        </archive>
                        <!--过滤掉不希望包含在jar中的文件-->
                        <excludes>
                            <!-- 排除不需要的文件夹(路径是jar包内部的路径) -->
                            <exclude>**/assembly/</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!-- The configuration of maven-assembly-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4.1</version>
                    <!-- 对项目的组装进行配置 -->
                    <configuration>
                        <!-- get all project dependencies -->
                        <!--
                        <descriptorRefs>
                          <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>

                         <includeSystemScope>true</includeSystemScope>


                        <archive>
                            <manifest>
                                <mainClass>com.cuit.mete.smfire.Main</mainClass>
                            </manifest>
                        </archive>
                        -->
                        <!-- 指定assembly插件的配置文件所在位置 -->
                        <descriptors>
                            <descriptor>src/main/resources/assembly/package.xml</descriptor>
                        </descriptors>
                    </configuration>
                    <executions>
                        <!-- <execution> <id>make-daemon-linux-zip</id> <phase>package</phase>
                                   <goals> <goal>single</goal> </goals> <configuration> <finalName>jsw-test</finalName>
                                   <appendAssemblyId>true</appendAssemblyId> <outputDirectory>${project.build.directory}</outputDirectory>
                                   <descriptors> <descriptor>src/main/assembly/daemon-linux-zip.xml</descriptor>
                                   </descriptors> </configuration> </execution> -->
                        <execution>
                            <id>make-assembly</id>
                            <!-- 将组装绑定到maven生命周期的哪一阶段 -->
                            <!--<phase>package</phase>-->
                            <goals>
                                <!-- 指定assembly插件的打包方式-->
                                <goal>single</goal>
                            </goals>
                        </execution>
                        <!-- 若要同时打多个包（如windows和linux不同系统的包），可配置多个execution，此处只打zip，因此配置一个 -->
                        <!-- <execution> id标识，唯一即可 <id>make-wrapper-win-zip</id> 设置package阶段进行
                            <phase>package</phase> <goals> 只运行一次 <goal>single</goal> </goals> <configuration>
                            输出的最终名称，自动添加格式后缀（如zip），当前示例为jsw-test.zip <finalName>jsw-test</finalName>
                            配置是否添加id到名称中，若为true，当前示例中，则为jsw-test-zip.zip，false即不添加，只是jsw-test.zip； 若同时打多个包，则可设为true，分别添加id以作区分
                            <appendAssemblyId>true</appendAssemblyId> 打包的输出目录，可自定义，${project.build.directory}为编译输出目录，即target目录
                            <outputDirectory>${project.build.directory}</outputDirectory> <descriptors>
                            使用的描述符，按此描述进行打包，此处配置一个zip.xml表示打zip包 <descriptor>src/main/assembly/wrapper-win-zip.xml</descriptor>
                            </descriptors> </configuration> </execution> -->
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>